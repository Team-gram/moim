{"version":3,"file":"js/186.628752fc.js","mappings":"4JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAQF,EAAII,SAASC,QAASH,EAAG,KAAK,CAACI,YAAY,gBAAgBC,MAAM,CAC7HC,SAAUR,EAAIQ,SACd,aAAcR,EAAIS,SAAST,EAAIU,OAC/B,aAAcV,EAAIW,aAAeX,EAAIW,YAAYC,OAAS,EAC1D,kBAAmBZ,EAAIa,eAAiBb,EAAIc,WAC9CC,MAAQ,eACFf,EAAIgB,iBAAiBC,mBAC9BC,GAAG,CAAC,UAAY,SAASC,GAAQ,OAAGA,EAAOC,SAAWD,EAAOE,cAAqB,KAAYrB,EAAIsB,WAAW,EAAE,UAAY,SAASH,GAAQ,OAAGA,EAAOC,SAAWD,EAAOE,cAAqB,KAAYrB,EAAIuB,WAAW,EAAE,QAAU,SAASJ,GAAQ,OAAOnB,EAAIwB,SAAS,IAAI,CAAExB,EAAIW,aAAeX,EAAIW,YAAYC,OAAQV,EAAG,MAAMF,EAAIyB,GAAIzB,EAAIW,aAAa,SAASe,EAAMC,GAAY,OAAOzB,EAAG,gBAAgB,CAAC0B,IAAID,EAAWZ,MAAQ,cAAcc,MAAM,CAAC,MAAQH,EAAM,MAAQ1B,EAAIW,YAAYC,OAAO,MAAQe,EAAW,SAAW3B,EAAI8B,eAAe,IAAG,GAAG9B,EAAI+B,OAAO/B,EAAI+B,IACpjB,EACIC,EAAkB,G,UC4BtB,GACAC,MAAAA,CACA,UACA,QACA,WACA,oBACA,kBAEAC,OAAAA,CAAAA,oBACAC,WAAAA,CACAC,cAAAA,IAAAA,EAAAA,EAAAA,KAAAA,KAAAA,EAAAA,KAAAA,EAAAA,QAEAC,SAAAA,CACA1B,cACA,SAOA,OANA,wBACA2B,EAAAA,EAAAA,OAAAA,KAAAA,mBAEA,qBACAA,EAAAA,EAAAA,OAAAA,KAAAA,gBAEA,CACA,EACAC,mBACA,OACA,wBACA,4DACA,2CAEA,EACA1B,gBACA,OACA,qBACA,uDACA,mBAEA,EACA2B,oBACA,yDACA,GACA,sCACAC,OACAC,QAAAA,IACA,oCACA,0BACA,wBACA,kBAEA,EACAZ,eACA,oCACA,cACA,EACAtB,WACA,kDACA,EACAM,YACA,OACA,iBACA,wDAEA,GAEA6B,QAAAA,CACApB,YAGA,yBAEA,YADA,eAGA,cACAqB,EAAAA,QACAC,EAAAA,oBACAC,GACA,sBACA,YAIA,WACA,yBACA,6CAEA,YADA,cAGA,CAKA,GADAC,QAAAA,IAAAA,eAAAA,KAAAA,YAAAA,SACA,oCAIA,6BAOA,OACAC,UAAAA,EACAC,wBAAAA,EAAAA,EAAAA,IAAAA,KAAAA,UACAC,eAAAA,EAAAA,EAAAA,IAAAA,KAAAA,UACAC,cAAAA,EAAAA,EAAAA,IAAAA,KAAAA,UACAC,aAAAA,EAAAA,EAAAA,IAAAA,KAAAA,WAEA,sBACA,EACA9B,YAEA,cAAAsB,EAAAA,QAAAC,GAAA,sBACA,YACA,+CACA,kBACAK,EAAAA,uBACAD,EAAAA,SACAD,GACA,aAGA,EACA,8BACAE,EAAAA,QAAAA,EAAAA,MAEA,MACA,UACA,aACAC,aAAAA,KAAAA,SACAC,YAAAA,KAAAA,SACAC,UAAAA,EAAAA,SAAAA,WAEA,sBACA,CACA,EACA7B,UACA,iCACA,uBACA,2BAEA,EACA8B,eACA,mBACA,EACA7C,SAAAA,GACA,gDAGA,UAEA,IC7L6P,I,UCQzP8C,GAAY,OACd,EACAxD,EACAiC,GACA,EACA,KACA,KACA,MAIF,EAAeuB,EAAiB,O","sources":["webpack://gramvue2/./src/lib-components/kalendar-cell.vue","webpack://gramvue2/src/lib-components/kalendar-cell.vue","webpack://gramvue2/./src/lib-components/kalendar-cell.vue?32f6","webpack://gramvue2/./src/lib-components/kalendar-cell.vue?01c0"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.cellData.visible)?_c('li',{staticClass:\"kalendar-cell\",class:{\n        selected: _vm.selected,\n        'is-an-hour': _vm.isAnHour(_vm.index),\n        'has-events': _vm.cell_events && _vm.cell_events.length > 0,\n        'being-created': !!_vm.being_created || _vm.hasPopups,\n    },style:(`\n  height: ${_vm.kalendar_options.cell_height}px;\n`),on:{\"mouseover\":function($event){if($event.target !== $event.currentTarget)return null;return _vm.mouseMove()},\"mousedown\":function($event){if($event.target !== $event.currentTarget)return null;return _vm.mouseDown()},\"mouseup\":function($event){return _vm.mouseUp()}}},[(_vm.cell_events && _vm.cell_events.length)?_c('div',_vm._l((_vm.cell_events),function(event,eventIndex){return _c('KalendarEvent',{key:eventIndex,style:(`z-index: 10`),attrs:{\"event\":event,\"total\":_vm.cell_events.length,\"index\":eventIndex,\"overlaps\":_vm.overlapValue}})}),1):_vm._e()]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <li\n        v-if=\"cellData.visible\"\n        @mouseover.self=\"mouseMove()\"\n        @mousedown.self=\"mouseDown()\"\n        @mouseup=\"mouseUp()\"\n        class=\"kalendar-cell\"\n        :class=\"{\n            selected: selected,\n            'is-an-hour': isAnHour(index),\n            'has-events': cell_events && cell_events.length > 0,\n            'being-created': !!being_created || hasPopups,\n        }\"\n        :style=\"\n            `\n      height: ${kalendar_options.cell_height}px;\n    `\n        \"\n    >\n        <div v-if=\"cell_events && cell_events.length\">\n        <KalendarEvent\n            :style=\"`z-index: 10`\"\n    \n            v-for=\"(event, eventIndex) in cell_events\"\n            :event=\"event\"\n            :key=\"eventIndex\"\n            :total=\"cell_events.length\"\n            :index=\"eventIndex\"\n            :overlaps=\"overlapValue\"\n        />\n        </div>\n    </li>\n</template>\n<script>\n/* eslint-disable */\nimport { cloneObject, getLocaleTime } from './utils.js';\n\nexport default {\n    props: [\n        'creator',\n        'index',\n        'cellData',\n        'constructedEvents',\n        'temporaryEvent',\n    ],\n    inject: ['kalendar_options'],\n    components: {\n        KalendarEvent: () => import('./kalendar-event.vue'),\n    },\n    computed: {\n        cell_events() {\n            let all_events = [];\n            if (this.completed_events) {\n                all_events = all_events.concat(this.completed_events);\n            }\n            if (this.being_created) {\n                all_events = all_events.concat(this.being_created);\n            }\n            return all_events;\n        },\n        completed_events() {\n            return (\n                this.constructedEvents &&\n                this.constructedEvents.hasOwnProperty(this.cellData.value) &&\n                this.constructedEvents[this.cellData.value]\n            );\n        },\n        being_created() {\n            return (\n                this.temporaryEvent &&\n                this.temporaryEvent.start.value === this.cellData.value &&\n                this.temporaryEvent\n            );\n        },\n        overlappingEvents() {\n            if (!this.constructedEvents || this.cell_events.length < 1)\n                return [];\n            return Object.values(this.constructedEvents)\n                .flat()\n                .filter(event => {\n                    let cellDate = new Date(this.cellData.value);\n                    let eventStarts = new Date(event.start.value);\n                    let eventEnds = new Date(event.end.value);\n                    return eventStarts < cellDate && eventEnds > cellDate;\n                });\n        },\n        overlapValue() {\n            let length = this.overlappingEvents.length;\n            return length > 2 ? 2 : length;\n        },\n        selected() {\n            return this.cell_events && this.cell_events.length > 0;\n        },\n        hasPopups() {\n            return (\n                this.selected &&\n                !!this.cell_events.find(ev => ev.status === 'popup-initiated')\n            );\n        },\n    },\n    methods: {\n        mouseDown() {\n            // user mouse got depressed while outside kalendar-cells\n            // came back in and clicked while the creator was on\n            if (!!this.creator.creating) {\n                this.mouseUp();\n                return;\n            }\n            let {\n                read_only,\n                overlap,\n                past_event_creation,\n            } = this.kalendar_options;\n            if (read_only) return;\n\n            // if past_event_creation is set to false, check if cell value is\n            // before current time\n            if (past_event_creation === false) {\n                let now = getLocaleTime(new Date());\n                if (new Date(now) > new Date(this.cellData.value)) {\n                    this.mouseUp();\n                    return;\n                }\n            }\n\n            // if overlap is set to false, prevent selection on top of\n            // other events\n            console.log('Cell events:', this.cell_events.length);\n            if (!overlap && this.cell_events.length > 0) return;\n\n            // close any open popups in the whole kalendar instance\n            // before starting a new one\n            this.$kalendar.closePopups();\n\n            // create a payload consisting of\n            // starting, current, ending and originalStarting cell\n            // starting, current and ending are self explanatory\n            // but originalStarting cell is required\n            // to determine the direction of the scroll/drag\n            let payload = {\n                creating: true,\n                original_starting_cell: cloneObject(this.cellData),\n                starting_cell: cloneObject(this.cellData),\n                current_cell: cloneObject(this.cellData),\n                ending_cell: cloneObject(this.cellData),\n            };\n            this.$emit('select', payload);\n        },\n        mouseMove() {\n            // same guards like in the mouseDown function\n            let { read_only, overlap } = this.kalendar_options;\n            if (read_only) return;\n            if (this.creator && !this.creator.creating) return;\n            let {\n                starting_cell,\n                original_starting_cell,\n                creating,\n            } = this.creator;\n\n            // direction of scroll\n            let going_down =\n                this.cellData.index >= starting_cell.index &&\n                starting_cell.index === original_starting_cell.index;\n\n            if (creating) {\n                let payload = {\n                    ...this.creator,\n                    current_cell: this.cellData,\n                    ending_cell: this.cellData,\n                    direction: going_down ? 'normal' : 'reverse',\n                };\n                this.$emit('select', payload);\n            }\n        },\n        mouseUp() {\n            if (this.kalendar_options.read_only) return;\n            if (this.creator.creating) {\n                this.$emit('initiatePopup');\n            }\n        },\n        resetCreator() {\n            this.$emit('reset');\n        },\n        isAnHour(index) {\n            if(this.kalendar_options.hourlySelection) {\n                return true\n            } else {\n                return (index + 1) % (60 / 10) === 0\n            }\n        },\n    },\n};\n</script>\n<style lang=\"scss\">\n$creator-bg: #34aadc;\n$creator-content: white;\n\nli {\n    font-size: 13px;\n    position: relative;\n}\n\n.created-events {\n    //width: 100%;\n    height: 100%;\n}\n\nul.building-blocks {\n    li {\n        z-index: 0;\n        border-bottom: dotted 1px var(--odd-cell-border-color);\n\n        &.first_of_appointment {\n            z-index: 1;\n            opacity: 1; //z-index:0;\n        }\n\n        &.is-an-hour {\n            border-bottom: solid 1px var(--table-cell-border-color);\n        }\n\n        &.has-events {\n            z-index: unset;\n        }\n\n        &.being-created {\n            z-index: 11;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./kalendar-cell.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./kalendar-cell.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./kalendar-cell.vue?vue&type=template&id=780fe542&\"\nimport script from \"./kalendar-cell.vue?vue&type=script&lang=js&\"\nexport * from \"./kalendar-cell.vue?vue&type=script&lang=js&\"\nimport style0 from \"./kalendar-cell.vue?vue&type=style&index=0&id=780fe542&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","cellData","visible","staticClass","class","selected","isAnHour","index","cell_events","length","being_created","hasPopups","style","kalendar_options","cell_height","on","$event","target","currentTarget","mouseMove","mouseDown","mouseUp","_l","event","eventIndex","key","attrs","overlapValue","_e","staticRenderFns","props","inject","components","KalendarEvent","computed","all_events","completed_events","overlappingEvents","flat","filter","methods","read_only","overlap","past_event_creation","console","creating","original_starting_cell","starting_cell","current_cell","ending_cell","direction","resetCreator","component"],"sourceRoot":""}